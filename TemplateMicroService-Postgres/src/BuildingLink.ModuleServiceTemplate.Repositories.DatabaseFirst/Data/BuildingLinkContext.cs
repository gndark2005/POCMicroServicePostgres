// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using BuildingLink.ModuleServiceTemplate.Repositories.DatabaseFirst.Users;
using BuildingLink.ModuleServiceTemplate.Repositories.DatabaseFirst.SharedEntities;

#nullable disable

namespace BuildingLink.ModuleServiceTemplate.Repositories.DatabaseFirst.Data
{
    public partial class BuildingLinkContext : DbContext
    {
        public BuildingLinkContext()
        {
        }

        public BuildingLinkContext(DbContextOptions<BuildingLinkContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ManagementCompanySuperuser> ManagementCompanySuperusers { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<PermissionSetting> PermissionSettings { get; set; }
        public virtual DbSet<UserSubType> UserSubTypes { get; set; }
        public virtual DbSet<Facility> Facilities { get; set; }
        public virtual DbSet<Unit> Units { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<ManagementCompanySuperuser>(entity =>
            {
                entity.Property(e => e.UserId).ValueGeneratedNever();
            });

            modelBuilder.Entity<PermissionSetting>(entity =>
            {
                entity.HasKey(e => new { e.PermissionId, e.BuildingTypeId, e.ManagingAgencyId, e.BuildingId, e.UserTypeId, e.PhysicalUnitId, e.OccupancyId, e.UserId, e.SubTypeId });

                entity.Property(e => e.SubTypeId).HasDefaultValueSql("((1))");

                entity.Property(e => e.ChangedDate).HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.ChangeUserId).HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getutcdate())");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.PermissionSettings)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PermissionSetting_tblUser");
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.HasIndex(e => new { e.UserName, e.Id, e.FacilityId, e.UnitId }, "IX_tblUser10")
                    .HasFillFactor((byte)75);

                entity.HasIndex(e => e.UnitId, "IX_tblUser3")
                    .HasFillFactor((byte)75);

                entity.HasIndex(e => e.FacilityId, "IX_tblUser_20130520")
                    .HasFillFactor((byte)75);

                entity.HasIndex(e => new { e.FacilityId, e.Id }, "IX_tblUser_20130923c")
                    .HasFillFactor((byte)75);

                entity.HasIndex(e => new { e.FacilityId, e.Id }, "_dta_index_tblUser_14_1447168401__K3_K1_5")
                    .HasFillFactor((byte)75);

                entity.Property(e => e.ReadOnly).HasDefaultValueSql("((0))");

                entity.Property(e => e.SubTypeId).HasDefaultValueSql("((99999))");

                entity.HasOne(d => d.CreatedBy)
                    .WithMany(p => p.InverseCreatedBy)
                    .HasForeignKey(d => d.CreatedByUserId)
                    .HasConstraintName("FK_tblUser_tblUser");

                entity.HasOne(d => d.PasswordResetUser)
                    .WithMany(p => p.InversePasswordResetUser)
                    .HasForeignKey(d => d.PasswordResetUserId)
                    .HasConstraintName("FK_tblUser_tblUser_PasswordResetUser");

                entity.HasOne(d => d.SubType)
                    .WithMany(p => p.TblUsers)
                    .HasForeignKey(d => d.SubTypeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tblUser_UserSubType");
            });

            modelBuilder.Entity<UserSubType>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();
            });

            modelBuilder.Entity<Unit>(entity =>
            {
                entity.HasIndex(e => e.IsActive, "IX_tblUnits1")
                    .HasFillFactor((byte)75);

                entity.HasIndex(e => new { e.FacilityId, e.IsActive }, "IX_tblUnits3")
                    .HasFillFactor((byte)75);

                entity.HasIndex(e => e.FacilityId, "IX_tblUnits6")
                    .HasFillFactor((byte)75);

                entity.HasIndex(e => new { e.FacilityId, e.IsActive, e.ApartmentId }, "IX_tblUnits8")
                    .HasFillFactor((byte)75);

                entity.HasIndex(e => e.FacilityId, "IX_tblUnits_20130517b")
                    .HasFillFactor((byte)75);

                entity.HasIndex(e => new { e.IsActive, e.Id }, "_dta_index_tblUnits_14_131687717__K9_K1_4_5_6_7_72")
                    .HasFillFactor((byte)75);

                entity.HasIndex(e => new { e.IsActive, e.FacilityId, e.Id }, "_dta_index_tblUnits_9_131687717__K9_K2_K1")
                    .HasFillFactor((byte)75);

                entity.HasIndex(e => new { e.IsActive, e.FacilityId, e.Id, e.ApartmentId }, "_dta_index_tblUnits_9_131687717__K9_K2_K1_K7_4_5_6_72")
                    .HasFillFactor((byte)75);

                entity.Property(e => e.ApartmentId).HasDefaultValueSql("('')");
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}